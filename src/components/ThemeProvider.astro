---
// src/components/ThemeProvider.astro
---

<script is:inline>
  // This script runs immediately when the page loads
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme')
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark'
    }
    return 'light'
  })()

  if (theme === 'light') {
    document.documentElement.classList.remove('dark')
  } else {
    document.documentElement.classList.add('dark')
  }

  window.localStorage.setItem('theme', theme)
</script>

<script>
  // This script handles theme changes after the page loads
  const handleThemeChange = () => {
    const element = document.documentElement
    element.classList.toggle('dark')

    const isDark = element.classList.contains('dark')
    localStorage.setItem('theme', isDark ? 'dark' : 'light')

    // Dispatch an event that other components can listen to
    window.dispatchEvent(
      new CustomEvent('theme-change', {
        detail: { theme: isDark ? 'dark' : 'light' },
      })
    )
  }

  // Make the function globally available
  window.handleThemeChange = handleThemeChange

  // Optional: Listen for system theme changes
  window
    .matchMedia('(prefers-color-scheme: dark)')
    .addEventListener('change', (e) => {
      if (!localStorage.getItem('theme')) {
        if (e.matches) {
          document.documentElement.classList.add('dark')
        } else {
          document.documentElement.classList.remove('dark')
        }
      }
    })
</script>
