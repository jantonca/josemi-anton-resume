---
// Navigation.astro
import { Moon, Sun } from 'lucide-react'
import { Icon } from 'astro-icon/components'

const links = [
  { name: 'About', href: '#about' },
  { name: 'Experience', href: '#experience' },
  { name: 'Skills', href: '#skills' },
  { name: 'Contact', href: '#contact' },
] as const
---

<nav
  class='fixed top-0 left-0 right-0 bg-background/80 backdrop-blur-sm z-50 border-b border-border'
>
  <div class='container mx-auto px-4'>
    <div class='flex items-center justify-between h-16'>
      <div class='text-lg font-bold text-primary'>Josemi Anton</div>

      <div class='hidden md:flex items-center space-x-8'>
        {
          links.map((link, index) => (
            <a
              href={link.href}
              class='text-muted-foreground hover:text-primary transition-colors font-heading group'
            >
              <span class='text-pacific font-mono mr-1'>0{index + 1}. </span>
              {link.name}
            </a>
          ))
        }
      </div>

      <button
        type='button'
        id='theme-toggle'
        class='ml-4 inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 hover:bg-accent hover:text-accent-foreground h-10 w-10'
        aria-label='Toggle theme'
      >
        <Icon
          name='sun'
          class='h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0'
        />
        <Icon
          name='moon'
          class='absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100'
        />
        <span class='sr-only'>Toggle theme</span>
      </button>
    </div>
  </div>
</nav>

<script>
  // Theme toggle functionality
  const themeToggle = document.getElementById('theme-toggle')

  // Function to set theme
  const setTheme = (theme: 'light' | 'dark') => {
    document.documentElement.classList.remove('light', 'dark')
    document.documentElement.classList.add(theme)
    localStorage.setItem('theme', theme)
  }

  // Initialize theme
  const initializeTheme = () => {
    const savedTheme = localStorage.getItem('theme') as 'light' | 'dark' | null
    const prefersDark = window.matchMedia(
      '(prefers-color-scheme: dark)'
    ).matches

    if (savedTheme) {
      setTheme(savedTheme)
    } else {
      setTheme(prefersDark ? 'dark' : 'light')
    }
  }

  // Toggle theme
  const toggleTheme = () => {
    const currentTheme = document.documentElement.classList.contains('dark')
      ? 'light'
      : 'dark'
    setTheme(currentTheme)
  }

  // Add event listeners
  if (themeToggle) {
    themeToggle.addEventListener('click', toggleTheme)
  }

  // Initialize theme on page load
  initializeTheme()

  // Optional: Listen for system theme changes
  window
    .matchMedia('(prefers-color-scheme: dark)')
    .addEventListener('change', (e) => {
      if (!localStorage.getItem('theme')) {
        setTheme(e.matches ? 'dark' : 'light')
      }
    })
</script>

<style>
  /* Optional: Add smooth transitions for theme changes */
  :root {
    --theme-transition: background-color 0.2s ease-in-out,
      color 0.2s ease-in-out, border-color 0.2s ease-in-out;
  }

  .theme-transition * {
    transition: var(--theme-transition);
  }

  /* Optional: Add hover effect for nav links */
  a {
    position: relative;
  }

  a::after {
    content: '';
    position: absolute;
    width: 0;
    height: 1px;
    bottom: -2px;
    left: 0;
    background-color: currentColor;
    transition: width 0.3s ease-in-out;
  }

  a:hover::after {
    width: 100%;
  }
</style>
