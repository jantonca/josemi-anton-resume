---
import type { InteractiveBackgroundProps } from '@/types/components'
import { cn } from '../lib/utils/utils'

interface Props extends InteractiveBackgroundProps {}

const { class: className } = Astro.props
---

<div
  class={cn('gradients-container font-sans overflow-hidden', className)}
  role='presentation'
  aria-hidden='true'
>
  <div class='g1'></div>
  <div class='g2'></div>
  <div class='g3'></div>
  <div class='g4'></div>
  <div class='g5'></div>
  <div class='interactive'></div>
</div>

<script>
  function initInteractiveBackground() {
    const interBubble = document.querySelector('.interactive') as HTMLElement
    let curX = 0
    let curY = 0
    let tgX = 0
    let tgY = 0

    function move() {
      curX += (tgX - curX) / 20
      curY += (tgY - curY) / 20

      if (interBubble) {
        interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`
      }
      requestAnimationFrame(move)
    }

    function handleMouseMove(event: MouseEvent) {
      tgX = event.clientX
      tgY = event.clientY
    }

    window.addEventListener('mousemove', handleMouseMove)
    move()

    // Optional: Cleanup function for when the component is removed
    document.addEventListener('astro:unmount', () => {
      window.removeEventListener('mousemove', handleMouseMove)
    })
  }

  // Initialize when the script runs
  initInteractiveBackground()
</script>
